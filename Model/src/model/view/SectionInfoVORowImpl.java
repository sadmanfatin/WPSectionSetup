package model.view;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 23 16:28:56 BDT 2021
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SectionInfoVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrgId {
            public Object get(SectionInfoVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SectionInfoVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        OrgName {
            public Object get(SectionInfoVORowImpl obj) {
                return obj.getOrgName();
            }

            public void put(SectionInfoVORowImpl obj, Object value) {
                obj.setOrgName((String)value);
            }
        }
        ,
        SectionId {
            public Object get(SectionInfoVORowImpl obj) {
                return obj.getSectionId();
            }

            public void put(SectionInfoVORowImpl obj, Object value) {
                obj.setSectionId((Number)value);
            }
        }
        ,
        SectionName {
            public Object get(SectionInfoVORowImpl obj) {
                return obj.getSectionName();
            }

            public void put(SectionInfoVORowImpl obj, Object value) {
                obj.setSectionName((String)value);
            }
        }
        ,
        Sl {
            public Object get(SectionInfoVORowImpl obj) {
                return obj.getSl();
            }

            public void put(SectionInfoVORowImpl obj, Object value) {
                obj.setSl((Number)value);
            }
        }
        ,
        CheckBox {
            public Object get(SectionInfoVORowImpl obj) {
                return obj.getCheckBox();
            }

            public void put(SectionInfoVORowImpl obj, Object value) {
                obj.setCheckBox((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SectionInfoVORowImpl object);

        public abstract void put(SectionInfoVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ORGNAME = AttributesEnum.OrgName.index();
    public static final int SECTIONID = AttributesEnum.SectionId.index();
    public static final int SECTIONNAME = AttributesEnum.SectionName.index();
    public static final int SL = AttributesEnum.Sl.index();
    public static final int CHECKBOX = AttributesEnum.CheckBox.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SectionInfoVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgName.
     * @return the OrgName
     */
    public String getOrgName() {
        

       return (String) getAttributeInternal(ORGNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgName.
     * @param value value to set the  OrgName
     */
    public void setOrgName(String value) {
        setAttributeInternal(ORGNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SectionId.
     * @return the SectionId
     */
    public Number getSectionId() {
        return (Number) getAttributeInternal(SECTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SectionId.
     * @param value value to set the  SectionId
     */
    public void setSectionId(Number value) {
        setAttributeInternal(SECTIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SectionName.
     * @return the SectionName
     */
    public String getSectionName() {
        return (String) getAttributeInternal(SECTIONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SectionName.
     * @param value value to set the  SectionName
     */
    public void setSectionName(String value) {
        setAttributeInternal(SECTIONNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Sl.
     * @return the Sl
     */
    public Number getSl() {
        return (Number) getAttributeInternal(SL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Sl.
     * @param value value to set the  Sl
     */
    public void setSl(Number value) {
        setAttributeInternal(SL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CheckBox.
     * @return the CheckBox
     */
    public String getCheckBox() {
        return (String) getAttributeInternal(CHECKBOX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CheckBox.
     * @param value value to set the  CheckBox
     */
    public void setCheckBox(String value) {
        setAttributeInternal(CHECKBOX, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
